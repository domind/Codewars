// 4kyu https://www.codewars.com/kata/roman-numerals-decoder

#include <iostream>
#include <string>

using namespace std;

int solution(string roman)
{

    int sum = 0;
    int i = 0;

    if (roman == "")
        return 0;
    size_t found = roman.find("CM");
    if (found != string::npos)
    {
        sum = sum + 900;
        roman.replace(found, 2, "00");
    }
    found = roman.find("CD");
    if (found != string::npos)
    {
        sum = sum + 400;
        roman.replace(found, 2, "00");
    }
    found = roman.find("XC");
    if (found != string::npos)
    {
        sum = sum + 90;
        roman.replace(found, 2, "00");
    }
    found = roman.find("XL");
    if (found != string::npos)
    {
        sum = sum + 40;
        roman.replace(found, 2, "00");
    }
    found = roman.find("IX");
    if (found != string::npos)
    {
        sum = sum + 9;
        roman.replace(found, 2, "00");
    }
    found = roman.find("IV");
    if (found != string::npos)
    {
        sum = sum + 4;
        roman.replace(found, 2, "00");
    }

    for (i; i < roman.length(); i++)
    {
        if (roman[i] == 'M')
            sum = sum + 1000;
        if (roman[i] == 'D')
            sum = sum + 500;
        if (roman[i] == 'C')
            sum = sum + 100;
        if (roman[i] == 'L')
            sum = sum + 50;
        if (roman[i] == 'X')
            sum = sum + 10;
        if (roman[i] == 'V')
            sum = sum + 5;
        if (roman[i] == 'I')
            sum = sum + 1;
    }


    return sum;
}
