//4kyu https://www.codewars.com/kata/sum-by-factors

using System;
using System.Collections.Generic;

public class SumOfDivided
{

public static bool isPrime(int number)
    {
        var boundary = (int)Math.Floor(Math.Sqrt(number));
        if (number % 2 == 0)
            return false;
        if (number == 3)
            return true;
        if (number == 5)
            return true;
        if (number == 4)
            return false;
        if (number == 6)
            return false;
        if (number == 8)
            return false;
        if (number == 10)
            return false;

        for (int y = 3; y <= boundary; y += 2)
        {
            if (number % y == 0)
                return false;
        }

        return true;
    }

public
    static string sumOfDivided(int[] lst)
    {

        string s = "";
        int[] t1 = new int[100];
        int[] t2 = new int[100];
        int index = 0;


        for (int i = 0; i < lst.Length; i++)
        {
            if (lst[i] % 2 == 0)
            {
                t1[index] = 2;
                t2[index] = lst[i];
                index++;
            }

            for (int y = 3; y <= Math.Abs(lst[i]); y++)
                if (isPrime(y))
                    if (lst[i] % y == 0)
                    {
                        t1[index] = y;
                        t2[index] = lst[i];
                        index++;
                    }
        }

        for (int i = 0; i < index - 1; i++)
            if (t1[i] != 0)
                for (int y = i + 1; y < index; y++)
                    if (t1[i] == t1[y])
                    {
                        t1[y] = 0;
                        t2[i] += t2[y];
                        t2[y] = 0;
                    }

        int check = 1000000;
        int checki = 0;
        for (int i = 0; i < index; i++)
        {
            for (int y = 0; y < index; y++)
                if ((t1[y] != 0) && (check > t1[y]))
                {
                    checki = y;
                    check = t1[y];
                }

            if (checki >= 0)
            {
                s += "(" + t1[checki].ToString() + " " + t2[checki].ToString() + ")";
                t1[checki] = 0;
            }
            checki = -1;
            check = 1000000;
        }


        return s;
    }
}
